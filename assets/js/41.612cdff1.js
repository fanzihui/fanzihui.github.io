(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{497:function(s,n,e){"use strict";e.r(n);var a=e(2),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"nuxt-生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nuxt-生命周期"}},[s._v("#")]),s._v(" Nuxt 生命周期")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://segmentfault.com/img/remote/1460000022742269",alt:"Alt text"}}),s._v(" "),e("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200930160933602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjkzNTcz,size_16,color_FFFFFF,t_70#pic_center",alt:"Alt text"}})]),s._v(" "),e("h3",{attrs:{id:"重要的点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重要的点"}},[s._v("#")]),s._v(" 重要的点")]),s._v(" "),e("ol",[e("li",[s._v("获取数据 asyncData() && Fetch()")]),s._v(" "),e("li",[s._v("中间件  middleware")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("\n// 列如在middleware目录中创建baseurl.js文件来定义中间件函数\n\nimport axios from 'axios'\nexport default function ({ route, store, redirect }) {\n    if (store.state) {\n        alert('抱歉您没有token，请先登录')\n        return redirect('/search')\n    }\n}\n\n\n// 之后在nuxt-config.js中配置，之后就可以在每一个页面中使用\n\nrouter: {\n    middleware: 'baseurl'    // 是js文件名字\n}\n\n\n\n// 但是如果不想在每一个页面中使用，可以在需要的页面中指定\n\n// 指定中间件函数\nmiddleware: 'baseurl',\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])]),e("ol",{attrs:{start:"3"}},[e("li",[s._v("store 持久化数据(vuex-persistedstate)")]),s._v(" "),e("li",[s._v("validate 动态路由检查数据")]),s._v(" "),e("li",[s._v("vuex 状态树")])]),s._v(" "),e("p",[s._v("actions  dispatch   异步\nmutations  commit   同步")]),s._v(" "),e("ol",{attrs:{start:"6"}},[e("li",[s._v("全局与局部的 css")]),s._v(" "),e("li",[s._v("auth 鉴权")]),s._v(" "),e("li",[s._v("路由自动生成")]),s._v(" "),e("li",[s._v("head 设置")]),s._v(" "),e("li",[s._v("插件系统")]),s._v(" "),e("li",[s._v("路由传参")]),s._v(" "),e("li",[s._v("nuxtServerInit 首屏获取服务端数据")])]),s._v(" "),e("h3",{attrs:{id:"tips"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tips"}},[s._v("#")]),s._v(" tips")]),s._v(" "),e("ol",[e("li",[s._v("修改 默认启动端口")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('"server":{\n "host":"127.0.0.1",\n "port":"3304"\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("middleware中的文件抛出错误")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("export default function({ store, error, redirect }) {\n  if (!store.state.user.userInfo.auth) {\n      error({\n       message: '没有权限哦！',\n      statusCode: 403\n     })\n  }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("ol",{attrs:{start:"3"}},[e("li",[e("p",[s._v("asyncData 挂载时没有 this 对象")])]),s._v(" "),e("li",[e("p",[s._v("修改成后缀为 html 的页面")])])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("<a @click=\"$router.push(`/strA-${'参数id'}.html`)\">去到页面A</a>\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ol",{attrs:{start:"5"}},[e("li",[s._v("获取当前路由名称和路径")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("获取当前路由名称\n\n$nuxt.$route.path\n获取当前路由路径\n\n$nuxt.$route.name\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("ol",{attrs:{start:"6"}},[e("li",[s._v("在子组件中不要再根元素上使用 v-if 而应该使用 v-show")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('// bad\n<div v-if="isVip">\n\n</div>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//good\n<div>\n\n</div>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("ol",{attrs:{start:"7"}},[e("li",[s._v("遇到 Vue 错误时候"),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v(" [Vue warn]: The client-side rendered virtual DOM tree is not matching server-rendered content ( Nuxt / Vue / lerna monorepo )\n\n 服务端与客户端渲染不一致的问题, 这个问题解决方法有两种\n\n 1. 使用 <clinet-only></clinet-only> 标签进行包裹,使其只在客户端加载\n \n 2. 查找代码,用 v-if 切换成 v-show 进行解决\n\n 3. 在 nuxt.config.js 中的 使用(未尝试)\n extend (config, ctx) {\n   config.resolve.symlinks = false\n }\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])])])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("\n8. nuxt项目`Failed to execute 'appendChild' on 'Node'`，有没有什么好办法？\n\nnuxt项目，刷新页面之后报错`Error while initializing app DOMException: Failed to execute 'appendChild' on 'Node': This node type does not support this method`.有没有什么好的解决办法？\n\n\n\n```javascript\n1.\n一般在开发环境下，日志会有warning:The client-side rendered virtual DOM tree is not matching server-rendered content. This is likely caused by incorrect HTML markup, for example nesting block-level elements inside <p>, or missing <tbody>. Bailing hydration and performing full client-side render.\n\n但是不影响使用，而且一般都是在刷新当前页面的时候才会报这个警告。但是一旦build发布到线上就会发生DOMException: Failed to execute 'appendChild' on 'Node': This node type does not support this method的问题。\n\n我的解决方案是，直接在疑似产生The client-side rendered virtual DOM tree is not matching server-rendered content问题的代码上包裹一层<client-only>标签，直接不让后台渲染这部分代码就解决这个问题了\n\n2. 使用 v-if 切换成 v-show\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("ol",{attrs:{start:"9"}},[e("li",[e("p",[s._v("nuxt 项目 "),e("code",[s._v("TypeError: [nuxt] Error while mounting app: Cannot read property 'indexOf' of undefined")]),s._v("\n同 第 8 问题 解决方法一致")])]),s._v(" "),e("li",[e("p",[s._v("网站根目录其实就是平常可见的 /static 目录")])]),s._v(" "),e("li",[e("p",[s._v("nuxt.js 关于页面中css 提取到 link的方法")])])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("那就是在nuxt.config.js下的build里添加 extractCSS: { allChunks: true }这句话\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"相关插件地址"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相关插件地址"}},[s._v("#")]),s._v(" 相关插件地址")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/microcipcip/cookie-universal/tree/master/packages/cookie-universal-nuxt",target:"_blank",rel:"noopener noreferrer"}},[s._v("cookie-universal-nuxt"),e("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=t.exports}}]);